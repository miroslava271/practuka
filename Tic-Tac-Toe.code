#include <iostream>
using namespace std;

// Function to draw the Tic-Tac-Toe board
void drawBoard(string board[3][3]) {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) cout << "|";
        }
        cout << endl;
        if (i < 2) cout << "-----" << endl;
    }
}

// Function to check for a win
string checkWinner(string board[3][3]) {
    // Check rows, columns, and diagonals
    for (int i = 0; i < 3; i++) {
        if (board[i][0] != " " && board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return board[i][0];
        if (board[0][i] != " " && board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return board[0][i];
    }
    if (board[0][0] != " " && board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return board[0][0];
    if (board[0][2] != " " && board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return board[0][2];
    return "";
}
int winsX = 0;
int winsO = 0;

int main() {
    string board[3][3] = {
        {" ", " ", " "},
        {" ", " ", " "},
        {" ", " ", " "}
    };

    string currentPlayer = "X";
    int moves = 0;
    string winner;

    cout << "Welcome to Tic-Tac-Toe game!" << endl;

    while (true) {
        drawBoard(board);
        int row, col;
        // Read input position
        cout << "Player " << currentPlayer << ", enter row (0-2) and column (0-2): ";
        cin >> row >> col;
        // Validate input
        if (row < 0 || row > 2 || col < 0 || col > 2 || board[row][col] != " ") {
            cout << "Invalid move. Try again." << endl;
            continue;
        }
        // Set board cell value with current symbol
        board[row][col] = currentPlayer;
        moves++;
        // Check for a winner
        winner = checkWinner(board);
        if (winner != "") {
            drawBoard(board);
            cout << "Player " << winner << " wins!" << endl;
            if (winner == "X")
                winsX++;
            else
                winsO++;
            break;
        }
        // If all cells are filled, end the game
        if (moves == 9) {
            drawBoard(board);
            cout << "It's a draw!" << endl;
            break;
        }
        // Update current symbol
        currentPlayer = (currentPlayer == "X") ? "O" : "X";
    }

    return 0;
}
